diff --git a/node_modules/ember-validators/addon/format.js b/node_modules/ember-validators/addon/format.js
index ccae439..ca9bff2 100755
--- a/node_modules/ember-validators/addon/format.js
+++ b/node_modules/ember-validators/addon/format.js
@@ -2,13 +2,8 @@ import { isEmpty, isNone } from '@ember/utils';
 import { assert } from '@ember/debug';
 import { getProperties, set } from '@ember/object';
 
-import Ember from 'ember';
 import validationError from 'ember-validators/utils/validation-error';
 
-const {
-  canInvoke
-} = Ember;
-
 /**
  *  @class Format
  *  @module Validators
@@ -57,7 +52,11 @@ export default function validateFormat(value, options, model, attribute) {
     set(options, 'regex', regex);
   }
 
-  if (!canInvoke(value, 'match') || (regex && isEmpty(value.match(regex)) !== inverse)) {
+  if (
+    !value ||
+    typeof value.match !== 'function' ||
+    (regex && isEmpty(value.match(regex)) !== inverse)
+  ) {
     return validationError(type || 'invalid', value, options);
   }
 
diff --git a/node_modules/ember-validators/addon/utils/is-promise.js b/node_modules/ember-validators/addon/utils/is-promise.js
index cabe274..5df99ec 100644
--- a/node_modules/ember-validators/addon/utils/is-promise.js
+++ b/node_modules/ember-validators/addon/utils/is-promise.js
@@ -1,9 +1,3 @@
-import Ember from 'ember';
-
-const {
-  canInvoke
-} = Ember;
-
 export default function isPromise(p) {
-  return !!(p && canInvoke(p, 'then'));
+  return p instanceof Object && typeof p.then === 'function';
 }
